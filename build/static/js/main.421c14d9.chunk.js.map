{"version":3,"sources":["store/database/HomeScreenHandler.js","components/modal/Dialog.js","components/home/LoginScreen.js","store/actions/actionCreators.js","components/home/RegisterScreen.js","components/home/HomeScreen.js","components/dashboard/TopNavbar.js","components/dashboard/Sidebar.js","components/dashboard/Searchbar.js","components/dashboard/ItemList.js","components/dashboard/Dashboard.js","components/work/TopToolbar.js","components/work/TopNavbar.js","components/work/property/PropertyWindow.js","components/work/layer/LayerWindow.js","components/work/canvas/TileGrid.js","components/work/canvas/Canvas.js","components/work/tileset/TileMap.js","components/work/tileset/TilesetWindow.js","components/work/map/MapWindow.js","components/work/WorkScreen.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/backendReducer.js","store/reducers/rootReducer.js","index.js","img/Project_Logo.PNG","img/squirtle.jpg"],"names":["Dialog","bottomSheet","fixedFooter","header","this","props","open","style","maxHeight","options","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","actions","content","React","Component","LoginScreen","state","email","password","modelActive1","modelActive2","vemail","vcode","vpass","vpass2","handleSubmit","e","preventDefault","login","socket","handleChange","target","setState","id","value","goRegister","clearError","handleGoRegister","handleModalOpen1","handleModalClose1","handleModalOpen2","handleModalClose2","auth","to","className","type","label","onChange","authError","onClick","waves","handleResend","color","connect","console","log","backend","dispatch","data","getState","emit","err","msg","loginHandler","RegisterScreen","password2","register","goLogin","handleGoLogin","registerHandler","screen","HomeScreen","currentScreen","getScreen","src","logo","alt","TopNavbar","alignLinks","brand","href","menuIcon","draggable","edge","Sidebar","Searchbar","ItemList","handleGoEdit","history","push","projects","map","project","closeIcon","revealIcon","textClassName","title","name","key","lastModified","Dashboard","activePage","items","leftBtn","maxButtons","rightBtn","dropdownOption","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","TopToolbar","trigger","node","extendWith","rect","document","body","getBoundingClientRect","PropertyWindow","width","height","default","x","y","LayerWindow","TileGrid","ctx","img","getSize","numRow","numColumn","buildModel","Math","floor","srcWidth","srcHeight","buildSource","buildDestination","o","i","sx","sy","sWidth","sHeight","destinationWidth","mapWidth","destinationHeight","mapHeight","dx","dy","dWidth","dHeight","draw","drawImage","canvas","Canvas","selected","createRef","componentDidMount","current","getContext","Image","squirtle","tileGrid","onload","handleSelect","left","top","clickX","clientX","clickY","clientY","gridWidth","gridHeight","getGridIndex","w","h","render","dim","ref","TileMap","scale","handleZoomIn","handleZoomOut","small","icon","onMouseDown","stopPropagation","border","TilesetWindow","MapWindow","WorkScreen","App","createSocket","exact","path","component","Boolean","window","location","hostname","match","initState","authReducer","action","backendReducer","io","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.421c14d9.chunk.js","sourcesContent":["import * as actionCreators from '../actions/actionCreators.js'\r\n\r\n\r\nexport const createSocketHandler = () => (dispatch, getState) => {\r\n  dispatch({ type: 'CREATE_SOCKET' })\r\n}\r\n\r\nexport const loginHandler = (data, socket) => (dispatch, getState) => {\r\n  socket.emit('login_input', data, (err, msg) => {\r\n    if (err)\r\n      dispatch({ type: actionCreators.LOGIN_ERROR, value: msg })\r\n    else\r\n      dispatch({ type: actionCreators.LOGIN_SUCCESS, value: msg })\r\n  })\r\n};\r\n\r\nexport const logoutHandler = (data, socket) => (dispatch, getState) => {\r\n\r\n};\r\n\r\nexport const registerHandler = (data, socket) => (dispatch, getState) => {\r\n  socket.emit('register_input', data, (err, msg) => {\r\n    if (err)\r\n      dispatch({ type: actionCreators.REGISTER_ERROR, value: msg })\r\n    else\r\n      dispatch({ type: actionCreators.REGISTER_SUCCESS, value: msg })\r\n  })\r\n};\r\n\r\nexport const clearErrorHandler = () => (dispatch, getState) => {\r\n  dispatch({ type: actionCreators.CLEAR_ERROR });\r\n}","import React from 'react';\r\nimport { Modal } from 'react-materialize'\r\n\r\nclass Dialog extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Modal\r\n                bottomSheet={false}\r\n                fixedFooter={false}\r\n                header={this.props.header}\r\n                open={this.props.open}\r\n                style={{ maxHeight: 'none' }}\r\n                options={{\r\n                    dismissible: false,\r\n                    endingTop: '10%',\r\n                    inDuration: 250,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    opacity: 0.5,\r\n                    outDuration: 250,\r\n                    preventScrolling: false,\r\n                    startingTop: '4%'\r\n                }}\r\n                actions={this.props.actions}\r\n            >\r\n                {this.props.content}\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dialog;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loginHandler, clearErrorHandler } from '../../store/database/HomeScreenHandler'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport Dialog from '../modal/Dialog'\r\n\r\n\r\nclass LoginScreen extends React.Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        modelActive1: false,\r\n        modelActive2: false,\r\n        vemail: \"\",\r\n        vcode: \"\",\r\n        vpass: \"\",\r\n        vpass2: \"\",\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state, this.props.socket);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            [target.id]: target.value,\r\n        }));\r\n    }\r\n\r\n\r\n    goRegister = () => {\r\n        this.props.clearError();\r\n        this.props.handleGoRegister();\r\n    }\r\n\r\n    handleModalOpen1 = () => {\r\n        this.setState({ modelActive1: true });\r\n    }\r\n\r\n    handleModalClose1 = () => {\r\n        this.setState({ modelActive1: false });\r\n    }\r\n\r\n    handleModalOpen2 = () => {\r\n        this.handleModalClose1();\r\n        this.setState({ modelActive2: true });\r\n    }\r\n\r\n    handleModalClose2 = () => {\r\n        this.setState({ modelActive2: false });\r\n    }\r\n\r\n    render() {\r\n        const { email, password, vemail, vpass, vpass2, vcode } = this.state;\r\n        const { auth } = this.props;\r\n\r\n        if (auth.email)\r\n            return <Redirect to=\"/dashboard\" />;\r\n\r\n        return (\r\n            <div className=\"white login-form right\">\r\n                <h5 className=\"grey-text text-darken-3\">Login</h5>\r\n                <TextInput type=\"email\" label=\"Enter Your Email\" id='email' value={email} onChange={this.handleChange} />\r\n                <TextInput type=\"password\" label=\"Enter Your Password\" id='password' value={password} onChange={this.handleChange} />\r\n                {auth.authError ? <div className=\"red-text center\"><p>{auth.authError}</p></div> : null}\r\n                <li className='login-link' onClick={this.goRegister}>New to Delit? sign up</li>\r\n                <li className='login-link' onClick={this.handleModalOpen1}>Forget your password?</li>\r\n                <Button waves='orange' className='home-submitbtn' onClick={this.handleSubmit}>Login</Button>\r\n                <Dialog\r\n                    header=\"Verification\"\r\n                    open={this.state.modelActive1}\r\n                    actions={[\r\n                        <Button waves=\"orange\" onClick={this.handleModalOpen2}>Submit</Button>,\r\n                        <Button waves=\"orange\" onClick={this.handleModalClose1}>Close</Button>\r\n                    ]}\r\n                    content={\r\n                        <section className=\"dialog_content\">\r\n                            <p><strong>Please Enter Your Email</strong></p>\r\n                            <p>We will send you a verification code</p>\r\n                            <TextInput label=\"Enter Your Email\" id='vemail' value={vemail} onChange={this.handleChange} />\r\n                        </section>\r\n                    } />\r\n\r\n                <Dialog\r\n                    header=\"Reset Password\"\r\n                    open={this.state.modelActive2}\r\n                    actions={[\r\n                        <Button waves=\"orange\" onClick={this.handleModalClose2}>Submit</Button>,\r\n                        <Button waves=\"orange\" onClick={this.handleModalClose2}>Close</Button>\r\n                    ]}\r\n                    content={\r\n                        <section className=\"dialog_content\">\r\n                            <p><strong>We have sent you a verification code</strong></p>\r\n                            <TextInput label=\"Enter Your Verification Code\" id='vcode' value={vcode}\r\n                                onChange={this.handleChange} />\r\n                            <Button waves=\"orange\" onClick={this.handleResend}> Resend <span style={{ color: \"red\" }}> (60s) </span></Button>\r\n                            <p><strong>Password</strong></p>\r\n                            <TextInput label=\"Enter Your New Password\" id='vpass' value={vpass}\r\n                                onChange={this.handleChange} />\r\n                            <p><strong>Password</strong></p>\r\n                            <TextInput label=\"Confirm Your New Password\" id='vpass2' value={vpass2}\r\n                                onChange={this.handleChange} />\r\n                        </section>\r\n                    } />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    const auth = state.auth;\r\n    const socket = state.backend.socket\r\n    return {\r\n        auth: auth,\r\n        socket: socket,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (data, socket) => dispatch(loginHandler(data, socket)),\r\n    clearError: () => dispatch(clearErrorHandler()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\r\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\r\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\r\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\r\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\r\n// REDUCER, WHICH ADVANCES STATE\r\n\r\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\n\r\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\r\n\r\nexport function registerSuccess() {\r\n    return { type: 'REGISTER_SUCCESS' }\r\n};\r\nexport function registerError(error) {\r\n    return { type: 'REGISTER_ERROR', error }\r\n};\r\nexport function loginSuccess() {\r\n    return { type: 'LOGIN_SUCCESS' }\r\n};\r\nexport function loginError(error) {\r\n    return { type: 'LOGIN_ERROR', error }\r\n};\r\nexport function logoutSuccess() {\r\n    return { type: 'LOGOUT_SUCCESS' }\r\n};\r\n\r\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\r\nexport function createTodoList(todoList) {\r\n    return {\r\n        type: 'CREATE_TODO_LIST',\r\n        todoList\r\n    }\r\n}\r\nexport function createTodoListError(error) {\r\n    return {\r\n        type: 'CREATE_TODO_LIST_ERROR',\r\n        error\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { registerHandler, clearErrorHandler } from '../../store/database/HomeScreenHandler'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport Dialog from '../modal/Dialog'\r\n\r\nclass RegisterScreen extends React.Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n        modelActive1: false,\r\n        modelActive2: false,\r\n        vemail: \"\",\r\n        vcode: \"\"\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.register(this.state, this.props.socket)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            [target.id]: target.value,\r\n        }));\r\n    }\r\n\r\n    goLogin = () => {\r\n        this.props.clearError();\r\n        this.props.handleGoLogin();\r\n    }\r\n\r\n\r\n    handleModalOpen1 = () => {\r\n        this.setState({ modelActive1: true });\r\n    }\r\n\r\n    handleModalClose1 = () => {\r\n        this.setState({ modelActive1: false });\r\n    }\r\n\r\n    handleModalOpen2 = () => {\r\n        this.handleModalClose1();\r\n        this.setState({ modelActive2: true });\r\n    }\r\n\r\n    handleModalClose2 = () => {\r\n        this.setState({ modelActive2: false });\r\n    }\r\n\r\n    render() {\r\n        const { email, password, password2, vemail, vcode } = this.state;\r\n        const { auth } = this.props\r\n        if (auth.email)\r\n            return <Redirect to=\"/dashboard\" />;\r\n        return (\r\n            <div className=\"white login-form right\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign up</h5>\r\n                <TextInput type=\"email\" label=\"Enter Your Email\" id='email' value={email} onChange={this.handleChange} />\r\n                <TextInput type=\"password\" label=\"Enter Your Password\" id='password' value={password} onChange={this.handleChange} />\r\n                <TextInput type=\"password\" label=\"Enter Your Password\" id='password2' value={password2} onChange={this.handleChange} />\r\n                {auth.authError ? <div className=\"red-text center\"><p>{auth.authError}</p></div> : null}\r\n                <li className='login-link' onClick={this.goLogin}>Already have account, go login</li>\r\n                <Button waves='orange' className='home-submitbtn' onClick={this.handleModalOpen1}>Sign Up</Button>\r\n                <Dialog\r\n                    header=\"Verification\"\r\n                    open={this.state.modelActive1}\r\n                    actions={[\r\n                        <Button waves=\"orange\" onClick={this.handleModalOpen2}>Submit</Button>,\r\n                        <Button waves=\"orange\" onClick={this.handleModalClose1}>Close</Button>\r\n                    ]}\r\n                    content={\r\n                        <section className=\"dialog_content\">\r\n                            <p><strong>Please Enter Your Email</strong></p>\r\n                            <p>We will send you a verification code</p>\r\n                            <TextInput label=\"Enter Your Email\" id='vemail' value={vemail}\r\n                                onChange={this.handleChange} />\r\n                        </section>\r\n                    } />\r\n                <Dialog\r\n                    header=\"Verify Your Email\"\r\n                    open={this.state.modelActive2}\r\n                    actions={[\r\n                        <Button waves=\"orange\" onClick={this.handleModalClose2}>Submit</Button>,\r\n                        <Button waves=\"orange\" onClick={this.handleModalClose2}>Close</Button>\r\n                    ]}\r\n                    content={\r\n                        <section className=\"dialog_content\">\r\n                            <p><strong>We have sent you a verification code</strong></p>\r\n                            <TextInput label=\"Enter Your Verification Code\" id='vcode' value={vcode}\r\n                                onChange={this.handleChange} />\r\n                            <Button waves=\"orange\" onClick={this.handleResend}> Resend <span style={{ color: \"red\" }}> (60s) </span></Button>\r\n                        </section>\r\n                    } />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const auth = state.auth;\r\n    const socket = state.backend.socket\r\n    return {\r\n        auth: auth,\r\n        socket: socket,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    register: (data, socket) => dispatch(registerHandler(data, socket)),\r\n    clearError: () => dispatch(clearErrorHandler()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterScreen);;","import React from 'react';\r\nimport LoginScreen from './LoginScreen';\r\nimport RegisterScreen from './RegisterScreen';\r\nimport logo from '../../img/Project_Logo.PNG';\r\n\r\n\r\nconst screen = {\r\n    LOGIN_SCREEN: \"HOME_SCREEN\",\r\n    REGISTER_SCREEN: \"REGISTER_SCREEN\"\r\n}\r\n\r\n\r\nclass HomeScreen extends React.Component {\r\n    state = {\r\n        currentScreen: screen.LOGIN_SCREEN,\r\n    }\r\n\r\n    handleGoRegister = () => {\r\n        this.setState({ currentScreen: screen.REGISTER_SCREEN })\r\n    }\r\n\r\n    handleGoLogin = () => {\r\n        this.setState({ currentScreen: screen.LOGIN_SCREEN })\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            [target.id]: target.value,\r\n        }));\r\n    }\r\n\r\n\r\n    getScreen = () => {\r\n        switch (this.state.currentScreen) {\r\n            case screen.LOGIN_SCREEN:\r\n                return <LoginScreen handleGoRegister={this.handleGoRegister} />\r\n            case screen.REGISTER_SCREEN:\r\n                return <RegisterScreen handleGoLogin={this.handleGoLogin} />\r\n            default:\r\n                return <div>error</div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"home-page\">\r\n                <img className=\"delit-logo left\" src={logo} alt=\"\" ></img>\r\n                {this.getScreen()}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\nimport { Navbar, NavItem, Icon } from 'react-materialize'\r\n\r\n\r\nclass TopNavbar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Navbar\r\n                alignLinks=\"right\"\r\n                brand={<a className=\"brand-logo\" href=\"/\">Logo</a>}\r\n                menuIcon={<Icon>menu</Icon>}\r\n                options={{\r\n                    draggable: true,\r\n                    edge: 'left',\r\n                    inDuration: 250,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 200,\r\n                    preventScrolling: true\r\n                }}\r\n            >\r\n                <NavItem>User</NavItem>\r\n                <NavItem>User</NavItem>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavbar;\r\n","import React from 'react';\r\nimport { Collection, CollectionItem, Button } from 'react-materialize'\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n      <Collection className='dashboard-sidebar'>\r\n        <CollectionItem className='dashboard-sideItem'><Button waves='red' className=\"dashboard-sidebtn\">Create A New Project</Button></CollectionItem>\r\n        <CollectionItem className='dashboard-sideItem'><Button waves='red' className=\"dashboard-sidebtn\">All Projects</Button></CollectionItem>\r\n        <CollectionItem className='dashboard-sideItem'><Button waves='red' className=\"dashboard-sidebtn\">Projects Created By Me</Button></CollectionItem>\r\n        <CollectionItem className='dashboard-sideItem'><Button waves='red' className=\"dashboard-sidebtn\">Projects Shared With Me</Button></CollectionItem>\r\n        <CollectionItem className='dashboard-sideItem'><Button waves='red' className=\"dashboard-sidebtn\">Manage My Tilesets</Button></CollectionItem>\r\n      </Collection>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { TextInput, Button } from 'react-materialize'\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"dashboard-search\" >\r\n                    <TextInput label=\"Enter search\" />\r\n                </div>\r\n                <Button type=\"submit\" waves='orange' className=\"dashboard-searchbutton blue\">Search</Button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport { Card, Icon, Button } from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ItemList extends React.Component {\r\n\r\n\r\n    handleGoEdit = () => {\r\n        this.props.history.push('/project/fwef')\r\n    }\r\n\r\n    render() {\r\n        const projects = this.props.projects;\r\n        return (\r\n            <div className=\"dashboard-itemlist\">\r\n                {\r\n                    projects && projects.map(project => {\r\n                        return (\r\n                            <Card\r\n                                className=\"dashboard-itemcard waves-red waves-effect\"\r\n                                closeIcon={<Icon>close</Icon>}\r\n                                revealIcon={<Icon>more_vert</Icon>}\r\n                                textClassName=\"white-text\"\r\n                                title={project.name}\r\n                                onClick={this.handleGoEdit}\r\n                                key={project.id}\r\n                            >\r\n                                Last Modified By: {project.lastModified}\r\n                                <Button waves='orange' className=\"dashboard-itemcard-btn right\">Team</Button>\r\n                                <Button waves='orange' className=\"dashboard-itemcard-btn right\">Edit</Button>\r\n                            </Card>\r\n                        );\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    //to be modified in future benchmarks\r\n    const projects = [\r\n        {\r\n            name: \"Project1\",\r\n            lastModified: \"123@123.com\",\r\n            id: \"123213\",\r\n        },\r\n        {\r\n            name: \"Project2\",\r\n            lastModified: \"cringe squirtle\",\r\n            id: \"sdfsd\"\r\n        }\r\n    ]\r\n\r\n    return {\r\n        projects: projects\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList);;\r\n","import React from 'react';\r\nimport TopNavbar from './TopNavbar'\r\nimport Sidebar from './Sidebar'\r\nimport Searchbar from './Searchbar'\r\nimport ItemList from './ItemList'\r\nimport { Pagination, Icon } from 'react-materialize'\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TopNavbar />\r\n                <Sidebar />\r\n                <div className=\"dashboard-display\">\r\n                    <ItemList history={this.props.history} />\r\n                    <Pagination\r\n                        activePage={2}\r\n                        items={10}\r\n                        leftBtn={<Icon>chevron_left</Icon>}\r\n                        maxButtons={8}\r\n                        rightBtn={<Icon>chevron_right</Icon>}\r\n                        className=\"dashboard-pagination center\"\r\n                    />\r\n                </div>\r\n                <Searchbar />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\nimport { Dropdown, Button, Checkbox } from 'react-materialize';\r\n\r\nconst dropdownOption = {\r\n    alignment: 'left',\r\n    autoTrigger: true,\r\n    closeOnClick: false,\r\n    constrainWidth: true,\r\n    container: null,\r\n    coverTrigger: true,\r\n    hover: false,\r\n    inDuration: 150,\r\n    onCloseEnd: null,\r\n    onCloseStart: null,\r\n    onOpenEnd: null,\r\n    onOpenStart: null,\r\n    outDuration: 250\r\n}\r\n\r\nclass TopToolbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"workscreen-toptoolbar\">\r\n                <Dropdown\r\n                    options={dropdownOption}\r\n                    trigger={<Button node=\"button\" className=\"workscreen-dropdown\">File</Button>}>\r\n                    <div>Import</div>\r\n                    <div>Export</div>\r\n                    <div>Save</div>\r\n                    <div>Save as</div>\r\n\r\n                </Dropdown>\r\n                <Dropdown\r\n                    options={dropdownOption}\r\n                    trigger={<Button node=\"button\" className=\"workscreen-dropdown\">Edit</Button>}>\r\n                    <div>Copy</div>\r\n                    <div>Paste</div>\r\n                </Dropdown>\r\n                <Dropdown\r\n                    options={dropdownOption}\r\n                    trigger={<Button node=\"button\" className=\"workscreen-dropdown\">View</Button>}>\r\n                    <Checkbox\r\n                        id=\"checkbox_1\"\r\n                        label=\"Hide Layer Window\"\r\n                        value=\"Red\"\r\n                    />\r\n                    <Checkbox\r\n                        id=\"checkbox_2\"\r\n                        label=\"Hide Tilesets Window\"\r\n                        value=\"Red\"\r\n                    />\r\n                    <Checkbox\r\n                        id=\"checkbox_3\"\r\n                        label=\"Hide Property Window\"\r\n                        value=\"Red\"\r\n                    />\r\n                </Dropdown>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopToolbar;","import React from 'react';\r\nimport { Navbar, NavItem, Icon } from 'react-materialize'\r\nimport TopToolbar from './TopToolbar';\r\n\r\n\r\nclass TopNavbar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Navbar\r\n                alignLinks=\"right\"\r\n                brand={<a className=\"brand-logo\" href=\"/dashboard\">Logo</a>}\r\n                extendWith={\r\n                    <TopToolbar />\r\n                }\r\n                menuIcon={<Icon>menu</Icon>}\r\n                options={{\r\n                    draggable: true,\r\n                    edge: 'left',\r\n                    inDuration: 250,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 200,\r\n                    preventScrolling: true\r\n                }}\r\n            >\r\n                <NavItem><div href=\"/dashboard\">Back</div></NavItem>\r\n                <NavItem href=\"components.html\">User</NavItem>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavbar;\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\n\r\nconst rect = document.body.getBoundingClientRect();\r\n\r\nclass PropertyWindow extends React.Component {\r\n\r\n    render() {\r\n        const { width, height } = rect;\r\n        return (\r\n            <Rnd\r\n                className=\"workscreen-window\"\r\n                default={{\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: width * 0.2,\r\n                    height: height * 0.7\r\n                }}\r\n            >\r\n                Property Window\r\n            </Rnd>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PropertyWindow;\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\n\r\nconst rect = document.body.getBoundingClientRect();\r\n\r\nclass LayerWindow extends React.Component {\r\n\r\n    render() {\r\n        const { width, height } = rect\r\n        const x = width * 0.8;\r\n        const y = 0;\r\n        return (\r\n            <Rnd\r\n                className=\"workscreen-window\"\r\n                default={{\r\n                    x: x,\r\n                    y: y,\r\n                    width: width * 0.2,\r\n                    height: height * 0.7 * 0.4\r\n                }}\r\n            >\r\n                Layer Window\r\n            </Rnd>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LayerWindow;\r\n","\r\nclass TileGrid {\r\n    constructor(ctx, img, width, height) {\r\n        this.ctx = ctx;\r\n        this.img = img;\r\n        this.width = width;         //tile dimension\r\n        this.height = height;       //tile dimension\r\n        this.mapWidth = this.ctx.canvas.width    //canvas dimension\r\n        this.mapHeight = this.ctx.canvas.height  //canvas dimension\r\n        this.srcWidth = 0           //img dimension\r\n        this.srcHeight = 0          //img dimension\r\n        this.sx = []\r\n        this.sy = []\r\n        this.sWidth = []\r\n        this.sHeight = []\r\n        this.dx = []\r\n        this.dy = []\r\n        this.dWidth = []\r\n        this.dHeight = []\r\n        this.numColumn = 0\r\n        this.numRow = 0\r\n    }\r\n\r\n    getSize = () => {\r\n        return this.numRow * this.numColumn;\r\n    }\r\n\r\n    /*\r\n        this function aims to set data for params of ctx.drawImage(), all of them shall be an array with same size\r\n        image shall be cropped to grids of tile dimension\r\n        cropped grids shall be converted into canvas dimension with rate of tile dimension and canvas dimension\r\n        same apply to xy\r\n    */\r\n    buildModel = () => {\r\n        this.numColumn = Math.floor(this.srcWidth / this.width)\r\n        this.numRow = Math.floor(this.srcHeight / this.height)\r\n        this.buildSource()\r\n        this.buildDestination()\r\n    }\r\n\r\n    buildSource = () => {\r\n        for (let o = 0; o < this.numRow; o++)\r\n            for (let i = 0; i < this.numColumn; i++) {\r\n                this.sx.push(i * this.width)\r\n                this.sy.push(o * this.height)\r\n                this.sWidth.push(this.width)\r\n                this.sHeight.push(this.height)\r\n            }\r\n    }\r\n\r\n    buildDestination = () => {\r\n        const destinationWidth = this.mapWidth / this.numColumn\r\n        const destinationHeight = this.mapHeight / this.numRow\r\n\r\n        for (let o = 0; o < this.numRow; o++)\r\n            for (let i = 0; i < this.numColumn; i++) {\r\n                this.dx.push(i * destinationWidth)\r\n                this.dy.push(o * destinationHeight)\r\n                this.dWidth.push(destinationWidth)\r\n                this.dHeight.push(destinationHeight)\r\n            }\r\n    }\r\n\r\n    draw = () => {\r\n\r\n        this.srcWidth = this.img.width\r\n        this.srcHeight = this.img.height\r\n        this.buildModel();\r\n        for (let i = 0; i < this.getSize(); i++) {\r\n            this.ctx.drawImage(this.img, this.sx[i], this.sy[i], this.sWidth[i], this.sHeight[i], this.dx[i] + 1, this.dy[i] + 1, this.dWidth[i] - 2, this.dHeight[i] - 2);\r\n        }\r\n    }\r\n}\r\n\r\nexport default TileGrid;","import React from 'react';\r\nimport squirtle from '../../../img/squirtle.jpg'\r\nimport TileGrid from './TileGrid'\r\n\r\nclass Canvas extends React.Component {\r\n\r\n    state = {\r\n        width: 150,\r\n        height: 150,\r\n        numRow: 0,\r\n        numColumn: 0,\r\n        selected: null,\r\n    }\r\n\r\n    canvas = React.createRef()\r\n\r\n    componentDidMount = () => {\r\n        const { width, height } = this.state;\r\n        let ctx = this.canvas.current.getContext('2d');\r\n        let img = new Image();\r\n        img.src = squirtle;\r\n        let tileGrid = new TileGrid(ctx, img, width, height);\r\n        img.onload = () => {\r\n            tileGrid.draw();\r\n            let { numRow, numColumn } = tileGrid\r\n            this.setState({ numRow: numRow, numColumn: numColumn })\r\n        }\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        let rect = this.canvas.current.getBoundingClientRect()\r\n        let { left, top, width, height } = rect;\r\n        let clickX = e.clientX - left\r\n        let clickY = e.clientY - top\r\n        let gridWidth = width / this.state.numColumn\r\n        let gridHeight = height / this.state.numRow\r\n        let selected = this.getGridIndex(clickX, clickY, gridWidth, gridHeight)\r\n        this.setState({ selected: selected })\r\n        //     selected: {\r\n        //         left: selected.left - 1,\r\n        //         top: selected.top - 1,\r\n        //         width: selected.width,\r\n        //         height: selected.height\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    getGridIndex = (x, y, w, h) => {\r\n        const { numRow, numColumn } = this.state\r\n        for (let o = 0; o < numRow; o++)\r\n            for (let i = 0; i < numColumn; i++) {\r\n                if (x > i * w && x < (i + 1) * w && y > o * h && y < (o + 1) * h)\r\n                    return {\r\n                        x: i,\r\n                        y: o\r\n                    }\r\n            }\r\n\r\n    }\r\n\r\n    render = () => {\r\n        const { selected, numColumn, numRow } = this.state;\r\n        let dim = {}\r\n        if (this.canvas.current !== null && selected !== null) {\r\n            const { x, y } = selected\r\n            dim = {\r\n                left: x * 100 / numColumn + \"%\",\r\n                top: y * 100 / numRow + \"%\",\r\n                width: 100 / numColumn + \"%\",\r\n                height: 100 / numRow + \"%\"\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div style={this.props.style} className={this.props.className}>\r\n                <canvas ref={this.canvas} className=\"canvas\" onClick={this.handleSelect}></canvas>\r\n                {selected ? <div style={dim} className=\"selected-grid\"></div> : selected}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Canvas;","import React from 'react';\r\nimport { Button, Icon } from 'react-materialize'\r\nimport Canvas from '../canvas/Canvas'\r\n\r\nclass TileMap extends React.Component {\r\n\r\n    state = {\r\n        scale: 50,\r\n    }\r\n\r\n    canvas = React.createRef();\r\n\r\n    handleZoomIn = () => {\r\n\r\n        let { scale } = this.state;\r\n        scale = scale * 2;\r\n        this.setState({ scale: scale })\r\n    }\r\n\r\n    handleZoomOut = () => {\r\n        let { scale } = this.state;\r\n        scale = scale / 2;\r\n        this.setState({ scale: scale })\r\n    }\r\n\r\n    render() {\r\n        const { scale } = this.state;\r\n        return (\r\n            <div>\r\n                <Button small\r\n                    waves=\"red\"\r\n                    node=\"button\"\r\n                    className=\"\"\r\n                    icon={<Icon>zoom_in</Icon>}\r\n                    onClick={this.handleZoomIn}>\r\n                </Button>\r\n\r\n                <Button small\r\n                    waves=\"red\"\r\n                    node=\"button\"\r\n                    className=\"\"\r\n                    icon={<Icon>zoom_out</Icon>}\r\n                    onClick={this.handleZoomOut}>\r\n                </Button>\r\n                <div className=\"display-place\" onMouseDown={e => e.stopPropagation()}>\r\n\r\n                    <Canvas canvas={this.canvas} className=\"map\" style={{\r\n                        width: scale + \"%\",\r\n                        height: scale + \"%\",\r\n                        left: scale < 100 ? (100 - scale) / 2 + \"%\" : 0,\r\n                        top: scale < 100 ? (100 - scale) / 2 + \"%\" : 0,\r\n                        border: \"1px solid #d3d3d3\"\r\n                    }} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TileMap;\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport TileMap from './TileMap'\r\n\r\nconst rect = document.body.getBoundingClientRect();\r\n\r\nclass TilesetWindow extends React.Component {\r\n\r\n    render() {\r\n        const { width, height } = rect\r\n        const x = width * 0.8;\r\n        const y = height * 0.7 * 0.4;\r\n        return (\r\n            <Rnd\r\n                className=\"workscreen-window\"\r\n                default={{\r\n                    x: x,\r\n                    y: y,\r\n                    width: width * 0.2,\r\n                    height: height * 0.7 * 0.6,\r\n                }}\r\n\r\n            >\r\n                <TileMap />\r\n            </Rnd>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TilesetWindow;\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\n// import TileMap from '../tileset/TileMap'\r\n\r\nconst rect = document.body.getBoundingClientRect();\r\n\r\nclass MapWindow extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { width, height } = rect\r\n        const x = width * 0.2;\r\n        const y = 0;\r\n        return (\r\n            <Rnd\r\n                className=\"workscreen-window\"\r\n                default={{\r\n                    x: x,\r\n                    y: y,\r\n                    width: width * 0.6,\r\n                    height: height * 0.7\r\n                }}\r\n            >\r\n                map window\r\n            </Rnd>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MapWindow;\r\n","import React from 'react';\r\nimport TopNavbar from './TopNavbar'\r\nimport PropertyWindow from './property/PropertyWindow'\r\nimport LayerWindow from './layer/LayerWindow'\r\nimport TilesetWindow from './tileset/TilesetWindow'\r\nimport MapWindow from './map/MapWindow'\r\n\r\nclass WorkScreen extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <TopNavbar />\r\n                <div>\r\n                    <MapWindow />\r\n                    <PropertyWindow />\r\n                    <LayerWindow />\r\n                    <TilesetWindow />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkScreen;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HomeScreen from './components/home/HomeScreen';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport WorkScreen from './components/work/WorkScreen';\r\nimport { createSocketHandler } from './store/database/HomeScreenHandler'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.createSocket();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomeScreen} />\r\n            <Route path='/dashboard' component={Dashboard} />\r\n            <Route path='/project/:key' component={WorkScreen} />\r\n            <Route path=\"/:any\" component={HomeScreen} />\r\n          </Switch>\r\n        </div>\r\n\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createSocket: () => dispatch(createSocketHandler()),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionCreators from '../actions/actionCreators'\r\n\r\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\r\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\r\n// AND RETURN THE NEW, UPDATED STATE\r\n\r\nconst initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionCreators.LOGIN_ERROR:\r\n      return {\r\n        authError: action.value,\r\n      };\r\n    case actionCreators.LOGIN_SUCCESS:\r\n      return {\r\n        email: action.value,\r\n      };\r\n    case actionCreators.LOGOUT_SUCCESS:\r\n      return state;\r\n    case actionCreators.REGISTER_SUCCESS:\r\n      return {\r\n        email: action.value,\r\n      };\r\n    case actionCreators.REGISTER_ERROR:\r\n      return {\r\n        authError: action.value,\r\n      };\r\n    case actionCreators.CLEAR_ERROR:\r\n      return {\r\n        authError: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","import io from 'socket.io-client'\r\n\r\n\r\nconst initState = {};\r\n\r\nconst backendReducer = (state = initState, action) => {\r\n    if (action.type === 'CREATE_SOCKET') {\r\n        const socket = io('https://real-delit.herokuapp.com/');\r\n        // const socket = io('127.0.0.1:5000');\r\n\r\n\r\n        return {\r\n            socket\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default backendReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport backendReducer from './backendReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  backend: backendReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './css/fonts/Lexend Exa/css.css';\r\nimport './css/todo_layout.css'\r\nimport './css/todo_style.css'\r\nimport './css/home_page.css'\r\nimport './css/dashboard.css'\r\nimport './css/workscreen.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Project_Logo.14dc221b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/squirtle.24d233b5.jpg\";"],"sourceRoot":""}